package net.slqmy.first_plugin;

import org.bukkit.*;
import org.bukkit.block.Block;
import org.bukkit.boss.BarColor;
import org.bukkit.boss.BarFlag;
import org.bukkit.boss.BarStyle;
import org.bukkit.boss.BossBar;
import org.bukkit.entity.ArmorStand;
import org.bukkit.entity.Entity;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.Player;
import org.bukkit.event.Listener;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.BookMeta;
import org.bukkit.inventory.meta.CompassMeta;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.plugin.java.JavaPlugin;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

public final class FirstPlugin extends JavaPlugin implements Listener {
	public final Map<UUID, UUID> recentMessages = new HashMap<>();

	@Override
	public void onEnable() {
		// Plugin startup logic.

		// If there is no config, one is generated by the plugin.
		getConfig().options().copyDefaults();
		saveDefaultConfig();

		// Handling commands.

		getCommand("heal").setExecutor(new HealCommand());
		getCommand("broadcast").setExecutor(new BroadcastCommand());
		getCommand("players").setExecutor(new PlayersCommand());
		getCommand("config").setExecutor(new ConfigCommand(this));
		getCommand("set-config").setExecutor(new SetConfigCommand(this));
		getCommand("secret-message").setExecutor(new SecretMessageCommand());
		getCommand("vanish").setExecutor(new VanishCommand(this));
		getCommand("give-guns").setExecutor(new GiveGuns());
		getCommand("give-book").setExecutor(new BookCommand());
		getCommand("give-banner").setExecutor(new BannerCommand());
		getCommand("punish").setExecutor(new PunishCommand());
		getCommand("message").setExecutor(new MessageCommand(recentMessages));
		getCommand("reply").setExecutor(new ReplyCommand(recentMessages));
		getCommand("menu").setExecutor(new MenuCommand());
		getCommand("hypixel-menu").setExecutor(new HypixelMenuCommand());
		getCommand("mc-complex-menu-command").setExecutor(new McComplexMenuCommand());
		getCommand("buff").setExecutor(new BuffCommand());
		getCommand("skull").setExecutor(new SkullCommand());
		getCommand("custom-skull").setExecutor(new CustomSkullCommand());

		getCommand("fruit").setExecutor(new FruitCommand());
		getCommand("fruit").setTabCompleter(new FruitTabCompleter());

		BossBar bossBar = Bukkit.createBossBar(
						ChatColor.LIGHT_PURPLE + "Wither Storm",
						BarColor.RED,
						BarStyle.SEGMENTED_20,
						BarFlag.CREATE_FOG,
						BarFlag.DARKEN_SKY,
						BarFlag.PLAY_BOSS_MUSIC
		);

		bossBar.setProgress(0.5f);

		Bukkit.getPluginManager().registerEvents(new Events(bossBar, recentMessages), this);

		System.out.println("The plugin 'FirstPlugin' has been been enabled!");

		String worldName = "world";
		World world = Bukkit.getWorld(worldName);

		Entity bee = world.spawnEntity(new Location(world, 0, 120, 0), EntityType.BEE);

		bee.setCustomName("Bee Bro");
		bee.setGlowing(true);

		ArmorStand armourStand = (ArmorStand)world.spawnEntity(new Location(world, 0, 120, 0), EntityType.ARMOR_STAND);

		armourStand.setArms(true);

		// armourStand.remove();

		ItemStack itemStack = new ItemStack(Material.NETHERITE_INGOT, 4);
		ItemMeta meta = itemStack.getItemMeta();

		meta.setDisplayName("Free Netherite!");

		itemStack.setItemMeta(meta);

		Block block = world.getBlockAt(15, 15, 15);
		System.out.println(block.getType().equals(Material.STONE));

		block.setType(Material.DIAMOND_BLOCK);

		ItemStack books = new ItemStack(Material.WRITTEN_BOOK, 3);
		BookMeta bookMeta = (BookMeta) books.getItemMeta();

		itemStack.setItemMeta(bookMeta);

		ItemStack compass = new ItemStack(Material.COMPASS);
		CompassMeta compassMeta = (CompassMeta) compass.getItemMeta();

		compass.setItemMeta(compassMeta);

		// Will create a world. If the world already exists, it will just load that world.
		// Bukkit.createWorld(new WorldCreator("bedwars-4032"));

		// Use WorldLoadEvent to check when the world has loaded.

		// Can also use player.getWorld();

		// Rain.
		// world.setStorm(true);

		world.setThundering(true);
		world.setThunderDuration(100);

		// 00000 = 06:00.
		// 60000 = 12:00.
		// 12000 = 18:00.
		// 18000 = 24:00.
		world.setTime(6000);

		/* BukkitTask bukkitTask = */ Bukkit.getScheduler().runTaskLater/*Asynchronously*/(this, () -> {
			for (Player player : Bukkit.getOnlinePlayers()) {
				player.sendMessage("Server has started! Up for 10 seconds and counting.");
			}
		}, 200L);

		// bukkitTask.cancel();

		Bukkit.getScheduler().runTaskTimer/*Asynchronously*/(this, () -> {
			for (Player player : Bukkit.getOnlinePlayers()) {
				player.sendMessage("This executes every 1500 seconds! And 10 seconds after the server has started.");
			}
		}, 200, 30000);


		// Reading errors and debugging lesson:

		/*

		String[] strings = new String[]{ "Hello", worldName, "There", "Apple" };
		String string = strings[4];

		Player player = null;
		player.sendMessage("Hello, this will totally work, right?");

		String[] strings = new String[]{ "Hi", "Hello", "Welcome", "Apple" };

		System.out.println("Got to stage 1.");

		System.out.println(strings[0]);

		System.out.println("Got to stage 2.");

		System.out.println(strings[2]);

		System.out.println("Got to stage 3.");

		// System.out.println(strings[3]);

		System.out.println("Got to stage 4.");

		System.out.println(strings[1]);

		System.out.println("Done!");

		*/
	}

	@Override
	public void onDisable() {
		// Plugin shutdown logic.
	}
}
